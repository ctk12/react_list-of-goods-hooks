{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","sortedGoods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EAjBoB,WACxB,IAAMC,EAAY,UAAOT,GAazB,OAXAS,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQN,GACN,KAAKP,EAASc,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKb,EAASgB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAINb,EAAaM,EAAaQ,UAAYR,EAG3BS,GAEpB,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYf,IAAaP,EAASc,WAEtCS,QAAS,kBAAMf,EAAYR,EAASc,WAPtC,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYf,IAAaP,EAASgB,SAEtCO,QAAS,kBAAMf,EAAYR,EAASgB,SAPtC,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAalB,IAEjBmB,QAAS,kBAAMlB,GAAeD,IAPhC,sBAYEG,IAAaP,EAASM,MAAQF,IAC9B,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,EAAYR,EAASM,MACrBD,GAAc,IALlB,sBAaJ,6BACE,6BACGI,EAAYe,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCpGpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a28f83df.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const getReorderedGoods = () => {\n    const visibleGoods = [...goodsFromServer];\n\n    visibleGoods.sort((a, b) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return a.localeCompare(b);\n        case SortType.LENGTH:\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n\n    return isReversed ? visibleGoods.reverse() : visibleGoods;\n  };\n\n  const sortedGoods = getReorderedGoods();\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortType(SortType.NONE);\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {sortedGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}